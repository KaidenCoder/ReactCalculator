{"version":3,"sources":["Button/Button.js","App.js","index.js"],"names":["Button","props","className","val","orangeDigit","children","onClick","valueClick","App","useState","value","setValue","isInt","n","Number","isFloat","handleDigits","evaluateDigits","answer","eval","toFixed","error","alert","message","clearDigits","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6GAAA,sBAmBeA,IAhBA,SAACC,GASZ,OACI,qBAAKC,UAAS,cAPE,SAACC,GACjB,GAAW,KAAPA,GAAqB,KAAPA,GAAqB,KAAPA,GAAqB,KAAPA,EAC1C,OAAO,EAKYC,CAAYH,EAAMI,UAAY,SAAW,MAAQC,QAAS,kBAAML,EAAMM,WAAWN,EAAMI,WAA9G,SACKJ,EAAMI,a,82BCTnB,SAASG,MAEP,cAA0BC,oDAAS,IAAnC,8NAAOC,MAAP,cAAcC,SAAd,cAGMC,MAAQ,SAACC,GACb,OAAOC,OAAOD,KAAOA,GAAKA,EAAI,IAAM,GAIhCE,QAAU,SAACF,GACf,OAAOC,OAAOD,KAAOA,GAAKA,EAAI,IAAM,GAIhCG,aAAe,SAACb,GACpBQ,SAASD,MAAQP,IAGbc,eAAiB,SAAjBA,iBACJ,IAEE,IAAIC,OAASC,KAAKT,OACdK,QAAQG,QACVP,SAASO,OAAOE,QAAQ,IACfR,MAAMM,SACfP,SAASO,QAEX,MAAOG,OAGPC,MAAMD,MAAME,WAKVC,YAAc,WAClBb,SAAS,KAGX,OACE,mEAAKT,UAAU,MAAf,UACE,kEAAKA,UAAU,mBAAf,SACE,iEAAIA,UAAU,gBAAd,SAA+BQ,UAEjC,mEAAKR,UAAU,SAAf,UACE,2DAAC,8CAAD,CAAQK,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYS,aAApB,kBAEF,mEAAKd,UAAU,SAAf,UACE,2DAAC,8CAAD,CAAQK,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYS,aAApB,kBAEF,mEAAKd,UAAU,SAAf,UACE,2DAAC,8CAAD,CAAQK,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYS,aAApB,kBAEF,mEAAKd,UAAU,SAAf,UACE,2DAAC,8CAAD,CAAQK,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYS,aAApB,eACA,2DAAC,8CAAD,CAAQT,WAAYU,eAApB,eACA,2DAAC,8CAAD,CAAQV,WAAYS,aAApB,kBAEF,kEAAKd,UAAU,SAAf,SACE,qEAAQA,UAAU,QAAQI,QAASkB,YAAnC,qBAEF,gEAAGtB,UAAU,UAAb,kDAKSM,2B,8BClFf,iEAKAiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.56305eb8.chunk.js","sourcesContent":["import React from 'react'\nimport './Button.css';\n\nconst Button = (props) => {\n\n    // the leftmost column in the calculator making orange background\n    const orangeDigit = (val) => {\n        if (val == \"+\" || val == \"-\" || val == \"*\" || val == \"/\") {\n            return true\n        }\n    }\n\n    return (\n        <div className={`btn ${orangeDigit(props.children) ? \"orange\" : null}`} onClick={() => props.valueClick(props.children)}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Button\n","import React, { useState } from 'react'\nimport './App.css';\nimport Button from './Button/Button';\n\n\nfunction App() {\n\n  const [value, setValue] = useState('');\n\n  // Check if the value is integer\n  const isInt = (n) => {\n    return Number(n) === n && n % 1 === 0;\n  }\n\n  // Check if the value is decimal\n  const isFloat = (n) => {\n    return Number(n) === n && n % 1 !== 0;\n  }\n\n  // gathers all the input digits\n  const handleDigits = (val) => {\n    setValue(value + val)\n  }\n\n  const evaluateDigits = () => {\n    try {\n      // evaluates the input digits\n      let answer = eval(value)\n      if (isFloat(answer)) {\n        setValue(answer.toFixed(2))\n      } else if (isInt(answer)) {\n        setValue(answer)\n      }\n    } catch (error) {\n      // Alert the user when the user input format is wrong\n      // Prevents the app from crashing\n      alert(error.message);\n    }\n  }\n\n  // Clear all the values input\n  const clearDigits = () => {\n    setValue(\"\")\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"evaluated-result\">\n        <h2 className=\"result-height\">{value}</h2>\n      </div>\n      <div className=\"digits\">\n        <Button valueClick={handleDigits}>7</Button>\n        <Button valueClick={handleDigits}>8</Button>\n        <Button valueClick={handleDigits}>9</Button>\n        <Button valueClick={handleDigits}>/</Button>\n      </div>\n      <div className=\"digits\">\n        <Button valueClick={handleDigits}>4</Button>\n        <Button valueClick={handleDigits}>5</Button>\n        <Button valueClick={handleDigits}>6</Button>\n        <Button valueClick={handleDigits}>*</Button>\n      </div>\n      <div className=\"digits\">\n        <Button valueClick={handleDigits}>1</Button>\n        <Button valueClick={handleDigits}>2</Button>\n        <Button valueClick={handleDigits}>3</Button>\n        <Button valueClick={handleDigits}>+</Button>\n      </div>\n      <div className=\"digits\">\n        <Button valueClick={handleDigits}>.</Button>\n        <Button valueClick={handleDigits}>0</Button>\n        <Button valueClick={evaluateDigits}>=</Button>\n        <Button valueClick={handleDigits}>-</Button>\n      </div>\n      <div className=\"digits\">\n        <button className=\"clear\" onClick={clearDigits}>CLEAR</button>\n      </div>\n      <p className=\"credits\">Made with ❤️ in ReactJs</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}